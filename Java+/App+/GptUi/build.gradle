plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version "$javaFxPluginVersion"
    id 'org.gradlex.extra-java-module-info' version "$extraJavaModuleInfoVersion"
}
javafx {
    version = javaFxVersion
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web']
}
repositories {
    mavenCentral()
}
application {
    mainClass = 'gptui.GptUiMain'
}
dependencies {
    implementation gsonDep, "com.vladsch.flexmark:flexmark-ext-tables:$flexMarkVersion", logbackClassicDep,
            "org.slf4j:jul-to-slf4j:$slf4jVersion"
    testImplementation "org.assertj:assertj-core:$assertJVersion"
}
extraJavaModuleInfo {
    automaticModule("com.vladsch.flexmark:flexmark", "flexmark")
    automaticModule("com.vladsch.flexmark:flexmark-util-ast", "flexmark.util.ast")
    automaticModule("com.vladsch.flexmark:flexmark-util-format", "flexmark.util.format")
    automaticModule("com.vladsch.flexmark:flexmark-util-builder", "flexmark.util.builder")
    automaticModule("com.vladsch.flexmark:flexmark-util-dependency", "flexmark.util.dependency")
    automaticModule("com.vladsch.flexmark:flexmark-util-html", "flexmark.util.html")
    automaticModule("com.vladsch.flexmark:flexmark-util-sequence", "flexmark.util.sequence")
    automaticModule("com.vladsch.flexmark:flexmark-util-collection", "flexmark.util.collection")
    automaticModule("com.vladsch.flexmark:flexmark-util-data", "flexmark.util.data")
    automaticModule("com.vladsch.flexmark:flexmark-util-misc", "flexmark.util.misc")
    automaticModule("com.vladsch.flexmark:flexmark-util-visitor", "flexmark.util.visitor")
    automaticModule("com.vladsch.flexmark:flexmark-ext-tables", "flexmark.ext.tables")
    automaticModule("com.vladsch.flexmark:flexmark-util", "flexmark.util")
    automaticModule("com.vladsch.flexmark:flexmark-util-options", "flexmark.util.options")
    automaticModule("org.assertj:assertj-core", "org.assertj.core")
    automaticModule("org.assertj:assertj-core", "org.assertj.core")
    automaticModule("org.awaitility:awaitility", "org.awaitility")
}
jar {
    dependsOn test
}
installDist {
    dependsOn 'copyIconToStartScriptsDir'
    into System.properties['user.home'] + '/installed/GptUI'
}
tasks.register('copyIconToStartScriptsDir', Copy) {
    dependsOn 'startScripts'
    from "${projectDir}/resources/gptui"
    into "${projectDir}/build/scripts"
}
