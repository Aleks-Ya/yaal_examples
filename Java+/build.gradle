subprojects {
    apply plugin: 'java'
    sourceSets.main.java.srcDir 'src'
    sourceSets.main.resources.srcDir 'resources'
    sourceSets.main.resources.srcDir 'resourcesTest'
    sourceSets.test.java.srcDir 'test'
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    defaultTasks('test')
    repositories {
        mavenCentral()
    }
    ext {
        h2Dep = 'com.h2database:h2:1.4.200'
        slf4jSimpleDep = 'org.slf4j:slf4j-simple:1.8.0-beta4'
        def okHttpVersion = '4.10.0'
        okHttpDep = "com.squareup.okhttp3:okhttp:$okHttpVersion"
        mockWebServerDep = "com.squareup.okhttp3:mockwebserver:$okHttpVersion"
        jettyServlet10Dep = 'org.eclipse.jetty:jetty-servlet:10.0.0'
        jettyServlet11Dep = 'org.eclipse.jetty:jetty-servlet:11.0.0'
        servlet4Dep = 'javax.servlet:javax.servlet-api:4.0.1'
        jacksonVersion = '2.13.3'
        jacksonDataBindDep = "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
        jsonUnitDep = 'net.javacrumbs.json-unit:json-unit:2.35.0'
        mockitoVersion = '4.2.0'
        mockitoDep = "org.mockito:mockito-core:$mockitoVersion"
        log4jCoreDep = 'org.apache.logging.log4j:log4j-core:2.14.1'
        gsonDep = 'com.google.code.gson:gson:2.9.0'
        commonsLangDep = 'org.apache.commons:commons-lang3:3.12.0'
        wireMockDep = 'com.github.tomakehurst:wiremock:2.27.2'
        jaxbApiDep = 'javax.xml.bind:jaxb-api:2.3.1'
        elasticSearchVersion = '7.12.0'
        junit5Version = '5.8.2'
        spring5Version = '5.3.21'
        spring4Version = '4.3.30.RELEASE'
        spring3Version = '3.2.18.RELEASE'
        springBootVersion = '2.7.0'
        springCloudVersion = '3.1.3'
        hadoop2Version = '2.10.1'
        fabric8ioVersion = '5.6.0'
        feignVersion = '11.6'
        mongoDbDriverDep = 'org.mongodb:mongodb-driver:3.12.10'
        hibernate5EntityManagerDep = 'org.hibernate:hibernate-entitymanager:5.6.3.Final'
        jsonAssertDep = 'org.skyscreamer:jsonassert:1.5.0'
        bouncyCustleDep = 'org.bouncycastle:bcpkix-jdk15on:1.68'
        testContainersVersion = '1.17.2'
        testContainersDep = "org.testcontainers:testcontainers:$testContainersVersion"
        testContainersJunitDep = "org.testcontainers:junit-jupiter:$testContainersVersion"
        redissonDep = 'org.redisson:redisson:3.17.4'
        lettuceDep = 'io.lettuce:lettuce-core:6.1.8.RELEASE'
    }
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}

/**
 * Add test dependencies to all projects (exclude JUnit5).
 */
configure(subprojects - project('UnitTest+:JUnit+:JUnit4').subprojects - project('UnitTest+:TestNG+').subprojects) {
    dependencies {
        testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5Version", 'org.hamcrest:hamcrest:2.2',
                'org.awaitility:awaitility:4.2.0', 'commons-io:commons-io:2.11.0', 'org.assertj:assertj-core:3.23.1'
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit5Version"
    }
    test {
        testLogging.showStandardStreams = true
        useJUnitPlatform()
    }
}

/**
 * Add Util project to all projects.
 */
configure(subprojects - project(':Util')) {
    dependencies {
        implementation project(':Util')
        testImplementation project(path: ':Util', configuration: 'tests')
    }
}
