subprojects {
    apply plugin: 'java'
    sourceSets.main.java.srcDir 'src'
    sourceSets.main.resources.srcDir 'resources'
    sourceSets.test.java.srcDir 'test'
    sourceSets.test.resources.srcDir 'resourcesTest'
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
    defaultTasks('test')
    repositories {
        if (project.hasProperty('maven_central_mirror')) {
            maven {
                url project.maven_central_mirror
            }
        }
        mavenCentral()
    }
    ext {
        h2Dep = 'com.h2database:h2:2.1.214'
        postgresDep = 'org.postgresql:postgresql:42.6.0'
        derbyDep = 'org.apache.derby:derby:10.16.1.1'
        hsqldbDep = 'org.hsqldb:hsqldb:2.7.1'
        slf4jVersion = '2.0.11'
        slf4jSimpleDep = "org.slf4j:slf4j-simple:$slf4jVersion"
        def okHttpVersion = '4.11.0'
        okHttpDep = "com.squareup.okhttp3:okhttp:$okHttpVersion"
        mockWebServerDep = "com.squareup.okhttp3:mockwebserver:$okHttpVersion"
        jettyServlet10Dep = 'org.eclipse.jetty:jetty-servlet:10.0.15'
        jettyServlet11Dep = 'org.eclipse.jetty:jetty-servlet:11.0.15'
        servlet4Dep = 'javax.servlet:javax.servlet-api:4.0.1'
        jacksonVersion = '2.15.3'
        jacksonDataBindDep = "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
        jacksonDatatypeJsr310Dep = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
        jsonUnitVersion = '3.2.2'
        jsonUnitDep = "net.javacrumbs.json-unit:json-unit:$jsonUnitVersion"
        jsonUnitAssertJDep = "net.javacrumbs.json-unit:json-unit-assertj:$jsonUnitVersion"
        mockitoVersion = '5.10.0'
        mockitoInlineVersion = '5.2.0'
        mockitoDep = "org.mockito:mockito-core:$mockitoVersion"
        mockitoJunitJupiterDep = "org.mockito:mockito-junit-jupiter:$mockitoVersion"
        log4j2CoreDep = 'org.apache.logging.log4j:log4j-core:2.22.0'
        logbackClassicDep = 'ch.qos.logback:logback-classic:1.4.14'
        gsonDep = 'com.google.code.gson:gson:2.10.1'
        apacheCommonsLangDep = 'org.apache.commons:commons-lang3:3.14.0'
        apacheCommonsCsvDep = 'org.apache.commons:commons-csv:1.10.0'
        apacheCommonsIoDep = 'commons-io:commons-io:2.15.1'
        apacheCommonsFileUploadDep = 'commons-fileupload:commons-fileupload:1.5'
        wireMockDep = 'com.github.tomakehurst:wiremock:2.27.2'
        jaxbApiDep = 'javax.xml.bind:jaxb-api:2.3.1'
        elasticSearch7Version = '7.17.15'
        elasticSearch8Version = '8.11.1'
        junit5PlatformVersion = '1.10.0'
        junit5Version = '5.10.1'
        cucumberVersion = '7.11.1'
        spring5Version = '5.3.33'
        spring4Version = '4.3.30.RELEASE'
        spring3Version = '3.2.18.RELEASE'
        springBoot2Version = '2.7.18'
        springBoot2StarterWebDep = "org.springframework.boot:spring-boot-starter-web:$springBoot2Version"
        springBoot2StarterDataJpaDep = "org.springframework.boot:spring-boot-starter-data-jpa:$springBoot2Version"
        springCloud3Version = '3.1.7'
        springCloud4Version = '4.1.0'
        springSecurity5Version = '5.8.8'
        springBoot3Version = '3.2.0'
        springBoot3StarterWebDep = "org.springframework.boot:spring-boot-starter-web:$springBoot3Version"
        springBoot3StarterDataJpaDep = "org.springframework.boot:spring-boot-starter-data-jpa:$springBoot3Version"
        hadoop2Version = '2.10.2'
        hadoop3Version = '3.3.6'
        hadoop3CommonDep = "org.apache.hadoop:hadoop-common:$hadoop3Version"
        fabric8ioVersion = '5.6.0'
        feignVersion = '12.1'
        mongoDbDriverDep = 'org.mongodb:mongodb-driver:3.12.12'
        hibernate5Version = '5.6.15.Final'
        hibernate5EntityManagerDep = "org.hibernate:hibernate-entitymanager:$hibernate5Version"
        eclipseLink2Version = '2.7.12'
        eclipseLink4Version = '4.0.1'
        jsonAssertDep = 'org.skyscreamer:jsonassert:1.5.1'
        bouncyCustleDep = 'org.bouncycastle:bcpkix-jdk15on:1.70'
        testContainersVersion = '1.19.1'
        testContainersDep = "org.testcontainers:testcontainers:$testContainersVersion"
        testContainersJunitDep = "org.testcontainers:junit-jupiter:$testContainersVersion"
        testContainersPostgresDep = "org.testcontainers:postgresql:$testContainersVersion"
        redissonDep = 'org.redisson:redisson:3.19.3'
        lettuceDep = 'io.lettuce:lettuce-core:6.2.2.RELEASE'
        jedisDep = 'redis.clients:jedis:4.3.1'
        embeddedRedisOzimov = 'it.ozimov:embedded-redis:0.7.3'
        hikariCPDep = 'com.zaxxer:HikariCP:5.0.1'
        sqliteJdbcDep = 'org.xerial:sqlite-jdbc:3.45.1.0'
        jsonPathVersion = '2.8.0'
        sardineDep = 'com.github.lookfirst:sardine:5.10'
        resilience4jVer = '2.0.2'
        aspectJVersion = '1.9.19'
        micrometerVersion = '1.10.5'
        prometheusVersion = '0.15.0'
        jsoupDep = 'org.jsoup:jsoup:1.15.3'
        retrofitVersion = '2.9.0'
        retrofitDep = "com.squareup.retrofit2:retrofit:$retrofitVersion"
        retrofitGsonDep = "com.squareup.retrofit2:converter-gson:$retrofitVersion"
        retrofitJacksonDep = "com.squareup.retrofit2:converter-jackson:$retrofitVersion"
        retrofitMoshiDep = "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
        liquibaseCoreDep = 'org.liquibase:liquibase-core:4.22.0'
        lucene8Version = '8.11.1'
        lucene9Version = '9.9.2'
        javaFxVersion = '21'
        javaFxPluginVersion = '0.1.0'
        testFxDep = 'org.testfx:testfx-junit5:4.0.17'
        flexMarkVersion = '0.64.8'
        extraJavaModuleInfoVersion = '1.8'
        assertJVersion = '3.25.3'
        jimfsDep = 'com.google.jimfs:jimfs:1.3.0'
        javaxInjectDep = 'javax.inject:javax.inject:1'
        guiceVersion = '7.0.0'
        igniteGuiceDep = 'com.gluonhq:ignite-guice:1.2.2'
        systemStubsVersion = '2.1.3'
        annotationApi = 'javax.annotation:javax.annotation-api:1.3.2'
        parquetVersion = '1.13.1'
        googleCloudBomDep = 'com.google.cloud:libraries-bom:26.32.0'
        aws1Version = '1.12.620'
        aws2Version = '2.25.2'
        googleTestingCompileDep = 'com.google.testing.compile:compile-testing:0.21.0'
        controlsFxDep = 'org.controlsfx:controlsfx:11.2.0'
        xStreamDep = 'com.thoughtworks.xstream:xstream:1.4.20'
        pdfTestDep = 'com.codeborne:pdf-test:1.8.1'
    }
    tasks.withType(JavaCompile).tap {
        configureEach {
            options.encoding = 'UTF-8'
        }
    }
}

/**
 * Add test dependencies to all projects (exclude JUnit5).
 */
configure(subprojects - project('UnitTest+:JUnit+:JUnit4').subprojects - project('UnitTest+:TestNG+').subprojects) {
    dependencies {
        testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5Version", 'org.hamcrest:hamcrest:2.2',
                'org.awaitility:awaitility:4.2.0', apacheCommonsIoDep, "org.assertj:assertj-core:$assertJVersion"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit5Version"
    }
    test {
        testLogging.showStandardStreams = true
        useJUnitPlatform()
    }
}

/**
 * Add Util projects to all projects.
 */
configure(subprojects - project(':Util+:UtilSrc')) {
    dependencies {
        implementation project(':Util+:UtilSrc')
    }
}
configure(subprojects - project(':Util+:UtilTest')) {
    dependencies {
        testImplementation project(':Util+:UtilTest')
    }
}
